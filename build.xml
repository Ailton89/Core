<?xml version="1.0" encoding="UTF-8" ?>
<project name="Jgility-Core" default="all" basedir=".">
	<description>Agil software development framework for jgility-plugin</description>

	<!-- Project properties -->
	<property file="build.properties" />
	<path id="class.path">
		<fileset dir="${lib.dir}" includes="*.jar" />
	</path>
	<path id="jar.file">
		<fileset file="${jar.dir}/${ant.project.name}-${app.version}.jar" />
	</path>

	<target name="substitution">
		<property name="guard" value="= License =" />
		<loadfile property="origlicensetext" srcFile="header.txt" />
		<loadfile property="authortext" srcFile="author.txt" />
		<echo file="${target.dir}/license.txt"
		      message="${line.separator}${origlicensetext}${line.separator} *     ${authortext}${line.separator} *" />
		<loadfile property="licensetext" srcFile="target/license.txt" />
		<replaceregexp match="${guard}(.*${guard})?" replace="${licensetext}" flags="ims">
			<fileset dir="src" includes="**/*" />
		</replaceregexp>
	</target>

	<!-- Compile application -->
	<target name="compile" depends="substitution">
		<mkdir dir="${build.dir}" />
		<delete dir="${classes.dir}" />
		<mkdir dir="${classes.dir}" />
		<javac destdir="${classes.dir}"
		       debug="on"
		       source="1.7"
		       target="1.7"
		       fork="yes"
		       includeantruntime="false">
			<src path="${src.dir}" />
			<src path="${test.dir}" />
			<classpath refid="class.path" />
		</javac>
	</target>

	<!-- Build Java Archive -->
	<target name="jar" depends="compile">
		<delete file="${jar.dir}/${ant.project.name}-${app.version}.jar" />
		<!-- Copy libraries to application's class-path -->
		<copy todir="${jar.class.path.dir}">
			<fileset dir="${lib.dir}" />
		</copy>
		<copy file="${licensetext}" todir="${jar.dir}"></copy>
		<!-- ManifestClassPath Ant Task -->
	    <manifest file="META-INF/MANIFEST.MF" mode="update">
	        <attribute name="Built-By" value="${authortext}"/>
	    	<attribute name="Bundle-Name" value="${ant.project.name}"/>
	    	<attribute name="Bundle-RequiredExecutionEnvironment" value="${java.runtime.version}"/>
	    	<attribute name="Bundle-Version" value="${app.version}"/>
	    </manifest>
		<jar destfile="${jar.dir}/${ant.project.name}-${app.version}.jar" 
			basedir="${classes.dir}"
			manifest="META-INF/MANIFEST.MF"
		/>
		<echo message="========== Done Building (JAR) ==========" />
	</target>

	<!-- Run tests -->
	<target name="test" depends="compile">
		<mkdir dir="${reports.dir}" />
		<delete dir="${junit.dir}" />
		<mkdir dir="${junit.dir}" />
		<mkdir dir="${junit.xml.dir}" />
		<mkdir dir="${junit.html.dir}" />
		<junit printsummary="yes">
			<classpath location="${classes.dir}" />
			<classpath refid="class.path" />
			<formatter type="plain" />
			<batchtest fork="yes" todir="${junit.xml.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		<!-- JUnit reports -->
		<junitreport todir="${junit.xml.dir}">
			<fileset dir="${junit.xml.dir}" includes="TEST-*.xml" />
			<report format="frames" todir="${junit.html.dir}" />
		</junitreport>
	</target>

	<!-- Generate Javadoc -->
	<target name="javadoc" description="Generate Javadoc.">
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<javadoc sourcepath="${src.dir}"
		         classpathref="class.path"
		         destdir="${javadoc.dir}"
		         access="public"
		         version="true"
		         author="true"
		         windowtitle="${ant.project.name} - Version ${app.version}"
		         doctitle="${ant.project.name} - Version ${app.version}"
		         packagenames="*">
		</javadoc>
		<echo message="========== Done Building (Javadoc) ==========" />
	</target>

	<!-- Clean application -->
	<target name="clean" description="Remove all files created by the build/test process.">
		<delete dir="${build.dir}" />
		<delete dir="${docs.dir}" />
		<delete dir="${reports.dir}" />
		<delete dir="${target.dir}" />
	</target>

	<!-- Collective task -->
	<target name="all" depends="jar" description="Builds JAR.">
		<echo message="========== Done Building (all) ==========" />
	</target>
</project>